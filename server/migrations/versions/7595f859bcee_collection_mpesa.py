"""collection: mpesa

Revision ID: 7595f859bcee
Revises: cdcedacdc78f
Create Date: 2025-09-15 12:19:53.065131

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7595f859bcee'
down_revision = 'cdcedacdc78f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('api_collections',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('slot_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('experience_id', sa.UUID(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=8, scale=2), nullable=False),
    sa.Column('transaction_reference', sa.Text(), nullable=False),
    sa.Column('status', sa.String(length=255), nullable=False),
    sa.Column('mpesa_number', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['experience_id'], ['experiences.id'], name=op.f('fk_api_collections_experience_id_experiences')),
    sa.ForeignKeyConstraint(['slot_id'], ['slots.id'], name=op.f('fk_api_collections_slot_id_slots')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_api_collections_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_api_collections'))
    )
    with op.batch_alter_table('api_collections', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_api_collections_amount'), ['amount'], unique=False)
        batch_op.create_index(batch_op.f('ix_api_collections_experience_id'), ['experience_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_api_collections_mpesa_number'), ['mpesa_number'], unique=False)
        batch_op.create_index(batch_op.f('ix_api_collections_slot_id'), ['slot_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_api_collections_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_api_collections_transaction_reference'), ['transaction_reference'], unique=True)
        batch_op.create_index(batch_op.f('ix_api_collections_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('experiences', schema=None) as batch_op:
        batch_op.drop_index('experience_trgm_idx', postgresql_using='gin')
        batch_op.drop_index('idx_experiences_search', postgresql_using='gin')
        batch_op.create_index('idx_experiences_search', [sa.text("to_tsvector('english', title || ' ' || description)")], unique=False, postgresql_using='gin')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('experiences', schema=None) as batch_op:
        batch_op.drop_index('idx_experiences_search', postgresql_using='gin')
        batch_op.create_index('idx_experiences_search', [sa.text("to_tsvector('english'::regconfig, (title || ' '::text) || description)")], unique=False, postgresql_using='gin')
        batch_op.create_index('experience_trgm_idx', [sa.text("((((((title || ' '::text) || description) || ' '::text) || destinations::text) || ' '::text) || activities::text)")], unique=False, postgresql_using='gin')

    with op.batch_alter_table('api_collections', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_api_collections_user_id'))
        batch_op.drop_index(batch_op.f('ix_api_collections_transaction_reference'))
        batch_op.drop_index(batch_op.f('ix_api_collections_status'))
        batch_op.drop_index(batch_op.f('ix_api_collections_slot_id'))
        batch_op.drop_index(batch_op.f('ix_api_collections_mpesa_number'))
        batch_op.drop_index(batch_op.f('ix_api_collections_experience_id'))
        batch_op.drop_index(batch_op.f('ix_api_collections_amount'))

    op.drop_table('api_collections')
    # ### end Alembic commands ###
