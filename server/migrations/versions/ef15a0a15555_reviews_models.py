"""reviews models

Revision ID: ef15a0a15555
Revises: 582e210f23e7
Create Date: 2025-09-22 17:49:49.640608

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ef15a0a15555'
down_revision = '582e210f23e7'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('reviews',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('experience_id', sa.UUID(), nullable=False),
    sa.Column('reservation_id', sa.UUID(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('images', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.CheckConstraint('rating >= 1 AND rating <= 5', name=op.f('ck_reviews_check_review_rating')),
    sa.ForeignKeyConstraint(['experience_id'], ['experiences.id'], name=op.f('fk_reviews_experience_id_experiences')),
    sa.ForeignKeyConstraint(['reservation_id'], ['reservations.id'], name=op.f('fk_reviews_reservation_id_reservations')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_reviews_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_reviews'))
    )
    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.create_index('idx_reviews_experience_rating', ['experience_id', 'rating'], unique=False)
        batch_op.create_index('idx_reviews_user_experience', ['user_id', 'experience_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_reviews_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_reviews_experience_id'), ['experience_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_reviews_rating'), ['rating'], unique=False)
        batch_op.create_index(batch_op.f('ix_reviews_reservation_id'), ['reservation_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_reviews_updated_at'), ['updated_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_reviews_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('experiences', schema=None) as batch_op:
        batch_op.add_column(sa.Column('avg_rating', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('reviews_count', sa.Integer(), nullable=True))
        batch_op.drop_index('idx_experiences_search', postgresql_using='gin')
        batch_op.create_index('idx_experiences_search', [sa.text("to_tsvector('english', title || ' ' || description)")], unique=False, postgresql_using='gin')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('experiences', schema=None) as batch_op:
        batch_op.drop_index('idx_experiences_search', postgresql_using='gin')
        batch_op.create_index('idx_experiences_search', [sa.text("to_tsvector('english'::regconfig, (title || ' '::text) || description)")], unique=False, postgresql_using='gin')
        batch_op.drop_column('reviews_count')
        batch_op.drop_column('avg_rating')

    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_reviews_user_id'))
        batch_op.drop_index(batch_op.f('ix_reviews_updated_at'))
        batch_op.drop_index(batch_op.f('ix_reviews_reservation_id'))
        batch_op.drop_index(batch_op.f('ix_reviews_rating'))
        batch_op.drop_index(batch_op.f('ix_reviews_experience_id'))
        batch_op.drop_index(batch_op.f('ix_reviews_created_at'))
        batch_op.drop_index('idx_reviews_user_experience')
        batch_op.drop_index('idx_reviews_experience_rating')

    op.drop_table('reviews')
    # ### end Alembic commands ###
