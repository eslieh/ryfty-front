"""fx disbursment tokens

Revision ID: b004ef2b85ab
Revises: 42ce8a11e4c3
Create Date: 2025-10-22 23:31:18.974856

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b004ef2b85ab'
down_revision = '42ce8a11e4c3'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('api_collections', schema=None) as batch_op:
        batch_op.drop_column('authorization_token')
        batch_op.drop_column('authorized')
        batch_op.drop_column('expires_at')

    with op.batch_alter_table('api_disbursements', schema=None) as batch_op:
        batch_op.add_column(sa.Column('authorization_token', sa.String(length=10), nullable=True))
        batch_op.add_column(sa.Column('expires_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('authorized', sa.Boolean(), nullable=True))

    with op.batch_alter_table('experiences', schema=None) as batch_op:
        batch_op.drop_index('idx_experiences_search', postgresql_using='gin')
        batch_op.create_index('idx_experiences_search', [sa.text("to_tsvector('english', title || ' ' || description)")], unique=False, postgresql_using='gin')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('experiences', schema=None) as batch_op:
        batch_op.drop_index('idx_experiences_search', postgresql_using='gin')
        batch_op.create_index('idx_experiences_search', [sa.text("to_tsvector('english'::regconfig, (title || ' '::text) || description)")], unique=False, postgresql_using='gin')

    with op.batch_alter_table('api_disbursements', schema=None) as batch_op:
        batch_op.drop_column('authorized')
        batch_op.drop_column('expires_at')
        batch_op.drop_column('authorization_token')

    with op.batch_alter_table('api_collections', schema=None) as batch_op:
        batch_op.add_column(sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('authorized', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('authorization_token', sa.VARCHAR(length=10), autoincrement=False, nullable=True))

    # ### end Alembic commands ###
