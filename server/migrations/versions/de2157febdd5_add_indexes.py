"""add indexes

Revision ID: de2157febdd5
Revises: e27a2f149950
Create Date: 2025-09-12 16:24:51.044530

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'de2157febdd5'
down_revision = 'e27a2f149950'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('experiences', schema=None) as batch_op:
        batch_op.create_index('idx_experiences_date_range', ['start_date', 'end_date'], unique=False)
        batch_op.create_index('idx_experiences_provider_status', ['provider_id', 'status'], unique=False)
        batch_op.create_index('idx_experiences_published', ['id', 'start_date'], unique=False, postgresql_where=sa.text("status = 'published'"))
        batch_op.create_index('idx_experiences_search', [sa.text("to_tsvector('english', title || ' ' || description)")], unique=False, postgresql_using='gin')
        batch_op.create_index('idx_experiences_status_dates', ['status', 'start_date', 'end_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_experiences_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_experiences_end_date'), ['end_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_experiences_provider_id'), ['provider_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_experiences_start_date'), ['start_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_experiences_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_experiences_title'), ['title'], unique=False)
        batch_op.create_index(batch_op.f('ix_experiences_updated_at'), ['updated_at'], unique=False)

    # with op.batch_alter_table('payment_method', schema=None) as batch_op:
    #     batch_op.create_index('idx_payment_method_defaults', ['user_id', 'default_method'], unique=False, postgresql_where=sa.text('default = true'))
    #     batch_op.create_index('idx_payment_method_user_type', ['user_id', 'default_method'], unique=False)
    #     batch_op.create_index(batch_op.f('ix_payment_method_default_method'), ['default_method'], unique=False)
    #     batch_op.create_index(batch_op.f('ix_payment_method_mpesa_number'), ['mpesa_number'], unique=False)
    #     batch_op.create_index(batch_op.f('ix_payment_method_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('platform_wallet', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_platform_wallet_balance'), ['balance'], unique=False)
        batch_op.create_index(batch_op.f('ix_platform_wallet_updated_at'), ['updated_at'], unique=False)

    with op.batch_alter_table('reservation_refunds', schema=None) as batch_op:
        batch_op.create_index('idx_refunds_experience_status', ['experience_id', 'status'], unique=False)
        batch_op.create_index('idx_refunds_pending', ['amount', 'reservation_id'], unique=False, postgresql_where=sa.text("status = 'pending'"))
        batch_op.create_index('idx_refunds_status_processed', ['status', 'processed_at'], unique=False)
        batch_op.create_index('idx_refunds_user_status', ['user_id', 'status'], unique=False)
        batch_op.create_index(batch_op.f('ix_reservation_refunds_amount'), ['amount'], unique=False)
        batch_op.create_index(batch_op.f('ix_reservation_refunds_experience_id'), ['experience_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_reservation_refunds_processed_at'), ['processed_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_reservation_refunds_reservation_id'), ['reservation_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_reservation_refunds_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_reservation_refunds_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('reservation_txn', schema=None) as batch_op:
        batch_op.create_index('idx_reservation_txn_amount_date', ['amount', 'paid_at'], unique=False)
        batch_op.create_index('idx_reservation_txn_experience_date', ['experience_id', 'paid_at'], unique=False)
        batch_op.create_index('idx_reservation_txn_method_status', ['payment_method', 'status'], unique=False)
        batch_op.create_index('idx_reservation_txn_settlement', ['status', 'platform_fee', 'paid_at'], unique=False)
        batch_op.create_index('idx_reservation_txn_status_paid', ['status', 'paid_at'], unique=False)
        batch_op.create_index('idx_reservation_txn_success', ['experience_id', 'amount', 'paid_at'], unique=False, postgresql_where=sa.text("status = 'success'"))
        batch_op.create_index(batch_op.f('ix_reservation_txn_amount'), ['amount'], unique=False)
        batch_op.create_index(batch_op.f('ix_reservation_txn_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_reservation_txn_experience_id'), ['experience_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_reservation_txn_paid_at'), ['paid_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_reservation_txn_payment_method'), ['payment_method'], unique=False)
        batch_op.create_index(batch_op.f('ix_reservation_txn_platform_fee'), ['platform_fee'], unique=False)
        batch_op.create_index(batch_op.f('ix_reservation_txn_reservation_id'), ['reservation_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_reservation_txn_slot_id'), ['slot_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_reservation_txn_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_reservation_txn_transaction_reference'), ['transaction_reference'], unique=True)

    with op.batch_alter_table('reservations', schema=None) as batch_op:
        batch_op.create_index('idx_reservations_confirmed', ['experience_id', 'created_at'], unique=False, postgresql_where=sa.text("status = 'confirmed'"))
        batch_op.create_index('idx_reservations_created_status', ['created_at', 'status'], unique=False)
        batch_op.create_index('idx_reservations_due_date_status', ['due_date', 'status'], unique=False)
        batch_op.create_index('idx_reservations_experience_status', ['experience_id', 'status'], unique=False)
        batch_op.create_index('idx_reservations_payment', ['payment_type', 'total_price', 'amount_paid'], unique=False)
        batch_op.create_index('idx_reservations_pending', ['user_id', 'due_date'], unique=False, postgresql_where=sa.text("status = 'pending'"))
        batch_op.create_index('idx_reservations_slot_status', ['slot_id', 'status'], unique=False)
        batch_op.create_index('idx_reservations_user_status', ['user_id', 'status'], unique=False)
        batch_op.create_index(batch_op.f('ix_reservations_amount_paid'), ['amount_paid'], unique=False)
        batch_op.create_index(batch_op.f('ix_reservations_checked_in'), ['checked_in'], unique=False)
        batch_op.create_index(batch_op.f('ix_reservations_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_reservations_due_date'), ['due_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_reservations_experience_id'), ['experience_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_reservations_payment_type'), ['payment_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_reservations_slot_id'), ['slot_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_reservations_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_reservations_total_price'), ['total_price'], unique=False)
        batch_op.create_index(batch_op.f('ix_reservations_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('settlement_txn', schema=None) as batch_op:
        batch_op.create_index('idx_settlement_platform_amount', ['platform', 'approved_amount'], unique=False)
        batch_op.create_index('idx_settlement_user_amount', ['user_id', 'approved_amount'], unique=False)
        batch_op.create_index(batch_op.f('ix_settlement_txn_approved_amount'), ['approved_amount'], unique=False)
        batch_op.create_index(batch_op.f('ix_settlement_txn_checkout_id'), ['checkout_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_settlement_txn_platform'), ['platform'], unique=False)
        batch_op.create_index(batch_op.f('ix_settlement_txn_request_amount'), ['request_amount'], unique=False)
        batch_op.create_index(batch_op.f('ix_settlement_txn_service_fee'), ['service_fee'], unique=False)
        batch_op.create_index(batch_op.f('ix_settlement_txn_txn_id'), ['txn_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_settlement_txn_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('slots', schema=None) as batch_op:
        batch_op.create_index('idx_slots_available', ['experience_id', 'date'], unique=False, postgresql_where=sa.text('capacity > booked'))
        batch_op.create_index('idx_slots_date_availability', ['date', 'capacity', 'booked'], unique=False)
        batch_op.create_index('idx_slots_experience_date', ['experience_id', 'date'], unique=False)
        batch_op.create_index('idx_slots_price_date', ['price', 'date'], unique=False)
        batch_op.create_index(batch_op.f('ix_slots_booked'), ['booked'], unique=False)
        batch_op.create_index(batch_op.f('ix_slots_capacity'), ['capacity'], unique=False)
        batch_op.create_index(batch_op.f('ix_slots_date'), ['date'], unique=False)
        batch_op.create_index(batch_op.f('ix_slots_experience_id'), ['experience_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_slots_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_slots_price'), ['price'], unique=False)

    with op.batch_alter_table('user_wallet', schema=None) as batch_op:
        batch_op.drop_constraint('uq_user_wallet_user_id', type_='unique')
        batch_op.create_index('idx_user_wallet_balance_updated', ['balance', 'updated_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_wallet_balance'), ['balance'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_wallet_updated_at'), ['updated_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_wallet_user_id'), ['user_id'], unique=True)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint('uq_users_email', type_='unique')
        batch_op.drop_constraint('uq_users_phone', type_='unique')
        batch_op.create_index('idx_users_active_providers', ['id'], unique=False, postgresql_where=sa.text("role = 'provider'"))
        batch_op.create_index('idx_users_role_date', ['role', 'date_joined'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_date_joined'), ['date_joined'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_phone'), ['phone'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_role'), ['role'], unique=False)

    with op.batch_alter_table('users_ledger', schema=None) as batch_op:
        batch_op.create_index('idx_users_ledger_amount_date', ['amount', 'date_done'], unique=False)
        batch_op.create_index('idx_users_ledger_ref', ['transaction_ref'], unique=False)
        batch_op.create_index('idx_users_ledger_type_date', ['txn_type', 'date_done'], unique=False)
        batch_op.create_index('idx_users_ledger_user_date', ['user_id', 'date_done'], unique=False)
        batch_op.create_index('idx_users_ledger_user_type_date', ['user_id', 'txn_type', 'date_done'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_ledger_amount'), ['amount'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_ledger_date_done'), ['date_done'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_ledger_refund_txn'), ['refund_txn'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_ledger_reservation_txn'), ['reservation_txn'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_ledger_transaction_ref'), ['transaction_ref'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_ledger_txn_type'), ['txn_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_ledger_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users_ledger', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_ledger_user_id'))
        batch_op.drop_index(batch_op.f('ix_users_ledger_txn_type'))
        batch_op.drop_index(batch_op.f('ix_users_ledger_transaction_ref'))
        batch_op.drop_index(batch_op.f('ix_users_ledger_reservation_txn'))
        batch_op.drop_index(batch_op.f('ix_users_ledger_refund_txn'))
        batch_op.drop_index(batch_op.f('ix_users_ledger_date_done'))
        batch_op.drop_index(batch_op.f('ix_users_ledger_amount'))
        batch_op.drop_index('idx_users_ledger_user_type_date')
        batch_op.drop_index('idx_users_ledger_user_date')
        batch_op.drop_index('idx_users_ledger_type_date')
        batch_op.drop_index('idx_users_ledger_ref')
        batch_op.drop_index('idx_users_ledger_amount_date')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_role'))
        batch_op.drop_index(batch_op.f('ix_users_phone'))
        batch_op.drop_index(batch_op.f('ix_users_name'))
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.drop_index(batch_op.f('ix_users_date_joined'))
        batch_op.drop_index('idx_users_role_date')
        batch_op.drop_index('idx_users_active_providers', postgresql_where=sa.text("role = 'provider'"))
        batch_op.create_unique_constraint('uq_users_phone', ['phone'], postgresql_nulls_not_distinct=False)
        batch_op.create_unique_constraint('uq_users_email', ['email'], postgresql_nulls_not_distinct=False)

    with op.batch_alter_table('user_wallet', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_wallet_user_id'))
        batch_op.drop_index(batch_op.f('ix_user_wallet_updated_at'))
        batch_op.drop_index(batch_op.f('ix_user_wallet_balance'))
        batch_op.drop_index('idx_user_wallet_balance_updated')
        batch_op.create_unique_constraint('uq_user_wallet_user_id', ['user_id'], postgresql_nulls_not_distinct=False)

    with op.batch_alter_table('slots', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_slots_price'))
        batch_op.drop_index(batch_op.f('ix_slots_name'))
        batch_op.drop_index(batch_op.f('ix_slots_experience_id'))
        batch_op.drop_index(batch_op.f('ix_slots_date'))
        batch_op.drop_index(batch_op.f('ix_slots_capacity'))
        batch_op.drop_index(batch_op.f('ix_slots_booked'))
        batch_op.drop_index('idx_slots_price_date')
        batch_op.drop_index('idx_slots_experience_date')
        batch_op.drop_index('idx_slots_date_availability')
        batch_op.drop_index('idx_slots_available', postgresql_where=sa.text('capacity > booked'))

    with op.batch_alter_table('settlement_txn', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_settlement_txn_user_id'))
        batch_op.drop_index(batch_op.f('ix_settlement_txn_txn_id'))
        batch_op.drop_index(batch_op.f('ix_settlement_txn_service_fee'))
        batch_op.drop_index(batch_op.f('ix_settlement_txn_request_amount'))
        batch_op.drop_index(batch_op.f('ix_settlement_txn_platform'))
        batch_op.drop_index(batch_op.f('ix_settlement_txn_checkout_id'))
        batch_op.drop_index(batch_op.f('ix_settlement_txn_approved_amount'))
        batch_op.drop_index('idx_settlement_user_amount')
        batch_op.drop_index('idx_settlement_platform_amount')

    with op.batch_alter_table('reservations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_reservations_user_id'))
        batch_op.drop_index(batch_op.f('ix_reservations_total_price'))
        batch_op.drop_index(batch_op.f('ix_reservations_status'))
        batch_op.drop_index(batch_op.f('ix_reservations_slot_id'))
        batch_op.drop_index(batch_op.f('ix_reservations_payment_type'))
        batch_op.drop_index(batch_op.f('ix_reservations_experience_id'))
        batch_op.drop_index(batch_op.f('ix_reservations_due_date'))
        batch_op.drop_index(batch_op.f('ix_reservations_created_at'))
        batch_op.drop_index(batch_op.f('ix_reservations_checked_in'))
        batch_op.drop_index(batch_op.f('ix_reservations_amount_paid'))
        batch_op.drop_index('idx_reservations_user_status')
        batch_op.drop_index('idx_reservations_slot_status')
        batch_op.drop_index('idx_reservations_pending', postgresql_where=sa.text("status = 'pending'"))
        batch_op.drop_index('idx_reservations_payment')
        batch_op.drop_index('idx_reservations_experience_status')
        batch_op.drop_index('idx_reservations_due_date_status')
        batch_op.drop_index('idx_reservations_created_status')
        batch_op.drop_index('idx_reservations_confirmed', postgresql_where=sa.text("status = 'confirmed'"))

    with op.batch_alter_table('reservation_txn', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_reservation_txn_transaction_reference'))
        batch_op.drop_index(batch_op.f('ix_reservation_txn_status'))
        batch_op.drop_index(batch_op.f('ix_reservation_txn_slot_id'))
        batch_op.drop_index(batch_op.f('ix_reservation_txn_reservation_id'))
        batch_op.drop_index(batch_op.f('ix_reservation_txn_platform_fee'))
        batch_op.drop_index(batch_op.f('ix_reservation_txn_payment_method'))
        batch_op.drop_index(batch_op.f('ix_reservation_txn_paid_at'))
        batch_op.drop_index(batch_op.f('ix_reservation_txn_experience_id'))
        batch_op.drop_index(batch_op.f('ix_reservation_txn_created_at'))
        batch_op.drop_index(batch_op.f('ix_reservation_txn_amount'))
        batch_op.drop_index('idx_reservation_txn_success', postgresql_where=sa.text("status = 'success'"))
        batch_op.drop_index('idx_reservation_txn_status_paid')
        batch_op.drop_index('idx_reservation_txn_settlement')
        batch_op.drop_index('idx_reservation_txn_method_status')
        batch_op.drop_index('idx_reservation_txn_experience_date')
        batch_op.drop_index('idx_reservation_txn_amount_date')

    with op.batch_alter_table('reservation_refunds', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_reservation_refunds_user_id'))
        batch_op.drop_index(batch_op.f('ix_reservation_refunds_status'))
        batch_op.drop_index(batch_op.f('ix_reservation_refunds_reservation_id'))
        batch_op.drop_index(batch_op.f('ix_reservation_refunds_processed_at'))
        batch_op.drop_index(batch_op.f('ix_reservation_refunds_experience_id'))
        batch_op.drop_index(batch_op.f('ix_reservation_refunds_amount'))
        batch_op.drop_index('idx_refunds_user_status')
        batch_op.drop_index('idx_refunds_status_processed')
        batch_op.drop_index('idx_refunds_pending', postgresql_where=sa.text("status = 'pending'"))
        batch_op.drop_index('idx_refunds_experience_status')

    with op.batch_alter_table('platform_wallet', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_platform_wallet_updated_at'))
        batch_op.drop_index(batch_op.f('ix_platform_wallet_balance'))

    with op.batch_alter_table('payment_method', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_payment_method_user_id'))
        batch_op.drop_index(batch_op.f('ix_payment_method_mpesa_number'))
        batch_op.drop_index(batch_op.f('ix_payment_method_default_method'))
        batch_op.drop_index(batch_op.f('ix_payment_method_default'))
        batch_op.drop_index('idx_payment_method_user_type')
        batch_op.drop_index('idx_payment_method_user_default')
        batch_op.drop_index('idx_payment_method_defaults', postgresql_where=sa.text('default = true'))

    with op.batch_alter_table('experiences', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_experiences_updated_at'))
        batch_op.drop_index(batch_op.f('ix_experiences_title'))
        batch_op.drop_index(batch_op.f('ix_experiences_status'))
        batch_op.drop_index(batch_op.f('ix_experiences_start_date'))
        batch_op.drop_index(batch_op.f('ix_experiences_provider_id'))
        batch_op.drop_index(batch_op.f('ix_experiences_end_date'))
        batch_op.drop_index(batch_op.f('ix_experiences_created_at'))
        batch_op.drop_index('idx_experiences_status_dates')
        batch_op.drop_index('idx_experiences_search', postgresql_using='gin')
        batch_op.drop_index('idx_experiences_published', postgresql_where=sa.text("status = 'published'"))
        batch_op.drop_index('idx_experiences_provider_status')
        batch_op.drop_index('idx_experiences_date_range')

    # ### end Alembic commands ###
